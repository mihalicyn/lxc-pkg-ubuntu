Source: lxc
Section: admin
Priority: optional
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Build-Depends: autotools-dev,
               debhelper (>= 9),
               dh-apparmor,
               dh-autoreconf,
               docbook2x,
               libapparmor-dev,
               libcap-dev,
               libseccomp-dev [i386 amd64],
               linux-libc-dev,
               python3-dev (>= 3.2.3),
               pkg-config
Standards-Version: 3.9.4
Homepage: http://lxc.sourceforge.net/
X-Python3-Version: >= 3.2

Package: lxc
Architecture: linux-any
Pre-Depends: ${misc:Pre-Depends}
Depends: adduser,
         apparmor,
         bridge-utils,
         dnsmasq-base,
         iptables,
         liblxc0 (= ${binary:Version}),
         rsync,
         python3,
         python3-lxc,
         ${misc:Depends},
         ${shlibs:Depends}
Recommends: cgroup-lite | cgroup-bin,
            libcap2-bin,
            lxc-templates (>= 0.8.0~rc1-4ubuntu43),
            openssl
Suggests: btrfs-tools, lvm2, lxctl
Description: Linux Containers userspace tools
 Containers are insulated areas inside a system, which have their own namespace
 for filesystem, network, PID, IPC, CPU and memory allocation and which can be
 created using the Control Group and Namespace features included in the Linux
 kernel.
 .
 This package provides the lxc-* tools, which can be used to start a single
 daemon in a container, or to boot an entire "containerized" system, and to
 manage and debug your containers.

Package: lxc-dbg
Section: debug
Priority: extra
Architecture: linux-any
Depends: lxc (= ${binary:Version}),
         lxc-dev (= ${binary:Version}),
         ${misc:Depends}
Description: Linux Containers userspace tools (debug)
 Containers are insulated areas inside a system, which have their own namespace
 for filesystem, network, PID, IPC, CPU and memory allocation and which can be
 created using the Control Group and Namespace features included in the Linux
 kernel.
 .
 This package contains the debugging symbols.

Package: lxc-dev
Section: libdevel
Architecture: linux-any
Depends: lxc (= ${binary:Version}), ${misc:Depends}
Description: Linux Containers userspace tools (development)
 Containers are insulated areas inside a system, which have their own namespace
 for filesystem, network, PID, IPC, CPU and memory allocation and which can be
 created using the Control Group and Namespace features included in the Linux
 kernel.
 .
 This package contains the development files.

Package: lxc-templates
Architecture: all
Depends: lxc (>= 0.8.0~rc1-4ubuntu43), ${misc:Depends}
Recommends: cloud-utils, debootstrap | cdebootstrap, openssl, rsync
Suggests: qemu-user-static
Replaces: lxc (<< 0.8.0~rc1-4ubuntu43)
Breaks: lxc (<< 0.8.0~rc1-4ubuntu43)
Description: Linux Containers userspace tools (development)
 Containers are insulated areas inside a system, which have their own namespace
 for filesystem, network, PID, IPC, CPU and memory allocation and which can be
 created using the Control Group and Namespace features included in the Linux
 kernel.
 .
 This package contains the templates.

Package: liblxc0
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends}, ${shlibs:Depends}
Replaces: lxc (<< 0.9.0~alpha3-0ubuntu1~)
Breaks: lxc (<< 0.9.0~alpha3-0ubuntu1~)
Description: Linux Containers userspace tools (library)
 Containers are insulated areas inside a system, which have their own namespace
 for filesystem, network, PID, IPC, CPU and memory allocation and which can be
 created using the Control Group and Namespace features included in the Linux
 kernel.
 .
 This package contains the libraries.

Package: python3-lxc
Architecture: any
Section: python
Depends: liblxc0 (=${binary:Version}),
         python3,
         ${misc:Depends},
         ${shlibs:Depends}
Recommends: lxc-templates (>= 0.8.0~rc1-4ubuntu43)
Description: Linux Containers userspace tools (Python 3.x bindings)
 Containers are insulated areas inside a system, which have their own namespace
 for filesystem, network, PID, IPC, CPU and memory allocation and which can be
 created using the Control Group and Namespace features included in the Linux
 kernel.
 .
 This package contains the Python 3.x bindings.
