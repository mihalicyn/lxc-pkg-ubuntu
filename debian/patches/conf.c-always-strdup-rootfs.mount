commit 54c30e290876c5fa6e4c7b5a511580793e4777e3
Author: Serge Hallyn <serge.hallyn@ubuntu.com>
Date:   Tue Jun 18 14:52:24 2013 -0500

    conf.c: always strdup rootfs.mount
    
    The reason is that the generic code which handles reading
    lxc.rootfs.mount always frees the old value if not NULL.
    So without this setting lxc.rootfs.mount = /mnt causes
    segfault.
    
    Signed-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>

Index: lxc-0.9.0/src/lxc/conf.c
===================================================================
--- lxc-0.9.0.orig/src/lxc/conf.c	2013-07-01 15:29:12.775142459 -0500
+++ lxc-0.9.0/src/lxc/conf.c	2013-07-01 15:31:12.663142507 -0500
@@ -2072,7 +2072,12 @@ struct lxc_conf *lxc_conf_init(void)
 	new->console.slave = -1;
 	new->console.name[0] = '\0';
 	new->maincmd_fd = -1;
-	new->rootfs.mount = default_rootfs_mount;
+	new->rootfs.mount = strdup(default_rootfs_mount);
+	if (!new->rootfs.mount) {
+		ERROR("lxc_conf_init : %m");
+		free(new);
+		return NULL;
+	}
 	new->kmsg = 1;
 	lxc_list_init(&new->cgroup);
 	lxc_list_init(&new->network);
@@ -3086,7 +3091,7 @@ void lxc_conf_free(struct lxc_conf *conf
 		return;
 	if (conf->console.path)
 		free(conf->console.path);
-	if (conf->rootfs.mount != default_rootfs_mount)
+	if (conf->rootfs.mount)
 		free(conf->rootfs.mount);
 	if (conf->rootfs.path)
 		free(conf->rootfs.path);
