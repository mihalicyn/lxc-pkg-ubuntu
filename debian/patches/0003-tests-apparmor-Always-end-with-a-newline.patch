From 0de98519a422f5a2b55908a1eae88a6b8f88ff2d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@ubuntu.com>
Date: Fri, 13 Jun 2014 15:54:31 -0400
Subject: tests: apparmor: Always end with a newline
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Some error messages in lxc-test-apparmor didn't end with a newline,
leading to slightly difficult to read output.

Signed-off-by: St√©phane Graber <stgraber@ubuntu.com>
Acked-by: Serge E. Hallyn <serge.hallyn@ubuntu.com>
---
 src/tests/aa.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/tests/aa.c b/src/tests/aa.c
index 2be472d..b8689ac 100644
--- a/src/tests/aa.c
+++ b/src/tests/aa.c
@@ -69,7 +69,7 @@ static int do_test_file_open(struct lxc_container *c, char *fnam)
 
 	ret = pipe(pipefd);
 	if (ret < 0) {
-		fprintf(stderr, "pipe failed %d", ret);
+		fprintf(stderr, "pipe failed %d\n", ret);
 		return fret;
 	}
 	attach_options.stdout_fd = pipefd[1];
@@ -77,13 +77,13 @@ static int do_test_file_open(struct lxc_container *c, char *fnam)
 	attach_options.attach_flags |= LXC_ATTACH_LSM_NOW;
 	ret = c->attach(c, test_attach_write_file, fnam, &attach_options, &pid);
 	if (ret < 0) {
-		fprintf(stderr, "attach failed");
+		fprintf(stderr, "attach failed\n");
 		goto err1;
 	}
 
 	ret = read(pipefd[0], result, sizeof(result)-1);
 	if (ret < 0) {
-		fprintf(stderr, "read failed %d", ret);
+		fprintf(stderr, "read failed %d\n", ret);
 		goto err2;
 	}
 
@@ -117,7 +117,7 @@ static bool test_aa_policy(struct lxc_container *c)
 	for (i = 0; files_to_deny[i]; i++) {
 		ret = do_test_file_open(c, files_to_deny[i]);
 		if (ret < 0) {
-			fprintf(stderr, "attach failed; skipping test");
+			fprintf(stderr, "attach failed; skipping test\n");
 			return true;
 		}
 		if (ret > 0) {
@@ -131,7 +131,7 @@ static bool test_aa_policy(struct lxc_container *c)
 	for (i = 0; files_to_allow[i]; i++) {
 		ret = do_test_file_open(c, files_to_allow[i]);
 		if (ret < 0) {
-			fprintf(stderr, "attach failed; skipping test");
+			fprintf(stderr, "attach failed; skipping test\n");
 			return true;
 		}
 		if (ret == 0) {
@@ -176,7 +176,7 @@ int main(int argc, char *argv[])
 
 	c->want_daemonize(c, true);
 	if (!c->startl(c, 0, NULL)) {
-		fprintf(stderr, "Error starting container");
+		fprintf(stderr, "Error starting container\n");
 		goto err;
 	}
 
