Index: lxc-0.8.0~rc1/src/lxc/confile.c
===================================================================
--- lxc-0.8.0~rc1.orig/src/lxc/confile.c	2012-08-14 10:25:36.000000000 -0500
+++ lxc-0.8.0~rc1/src/lxc/confile.c	2012-08-14 10:25:36.000000000 -0500
@@ -74,6 +74,7 @@
 static int config_cap_drop(const char *, char *, struct lxc_conf *);
 static int config_console(const char *, char *, struct lxc_conf *);
 static int config_seccomp(const char *, char *, struct lxc_conf *);
+static int config_includefile(const char *, char *, struct lxc_conf *);
 
 typedef int (*config_cb)(const char *, char *, struct lxc_conf *);
 
@@ -116,6 +117,7 @@
 	{ "lxc.cap.drop",             config_cap_drop             },
 	{ "lxc.console",              config_console              },
 	{ "lxc.seccomp",              config_seccomp              },
+	{ "lxc.include",              config_includefile          },
 };
 
 static const size_t config_size = sizeof(config)/sizeof(struct config);
@@ -888,6 +890,12 @@
 	return 0;
 }
 
+static int config_includefile(const char *key, char *value,
+			  struct lxc_conf *lxc_conf)
+{
+	return lxc_config_read(value, lxc_conf);
+}
+
 static int config_rootfs(const char *key, char *value, struct lxc_conf *lxc_conf)
 {
 	if (strlen(value) >= MAXPATHLEN) {
Index: lxc-0.8.0~rc1/doc/lxc.conf.sgml.in
===================================================================
--- lxc-0.8.0~rc1.orig/doc/lxc.conf.sgml.in	2012-08-14 10:25:36.000000000 -0500
+++ lxc-0.8.0~rc1/doc/lxc.conf.sgml.in	2012-08-14 10:25:57.681331775 -0500
@@ -640,6 +640,31 @@
       </variablelist>
     </refsect2>
 
+    <refsect2>
+      <title>File includes</title>
+      <para>
+	A configuration file can cause other configuration files to
+	be included.  In this way common configuration sections can
+	be grouped such that they can be updated in one place, rather
+	than needing to be separately updated in each container
+	configuration.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term>
+	    <option>lxc.include</option>
+	  </term>
+	  <listitem>
+	    <para>
+	      Specify the pathname for another file whose contents
+	      should be treated as though they were a part of this
+	      file.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
   </refsect1>
 
   <refsect1>
