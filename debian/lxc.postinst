#!/bin/sh
# postinst script for lxc
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

add_users()
{
    if ! getent group lxc-dnsmasq >/dev/null; then
        addgroup --quiet --system lxc-dnsmasq
    fi

    if ! getent passwd lxc-dnsmasq >/dev/null; then
        adduser --quiet \
            --system \
            --ingroup lxc-dnsmasq \
            --quiet \
            --disabled-login \
            --disabled-password \
            --home /var/lib/lxc \
            --no-create-home \
            -gecos "LXC dnsmasq" \
            lxc-dnsmasq
    fi
}

apparmor_load() {
    # don't load profiles if mount mediation is not supported
    SYSF=/sys/kernel/security/apparmor/features/mount/mask
    if [ ! -f $SYSF ]; then
        return
    fi

    if [ -x /lib/init/apparmor-profile-load ]; then
        /lib/init/apparmor-profile-load lxc-containers
    fi
}

case "$1" in
    configure)
        add_users
        apparmor_load
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

# We need this after the debhelper generated code so that dpkg-maintscript
# can do its renamming first.
if [ "$1" = "configure" ]; then
    # Configure dnsmasq
    if [ -f /etc/dnsmasq.d-available/lxc ]; then
        echo "Setting up lxc dnsmasq configuration."
        mkdir -p /etc/dnsmasq.d
        if [ ! -e /etc/dnsmasq.d/lxc ]; then
            ln -s /etc/dnsmasq.d-available/lxc /etc/dnsmasq.d/lxc
        fi

        # Try to restart a potential system wide dnsmasq
        invoke-rc.d dnsmasq restart 2>/dev/null || true
    fi
fi
exit 0
